"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var Viewer_1 = require("../models/Viewer");
/** Client to call Billing schema */
var BillingClient = /** @class */ (function () {
    /** @ignore */
    function BillingClient(client) {
        this.client = client;
    }
    /**
     * Get billing information.
     *
     * ```typescript
     * client.billing.get(
     *   ['id', 'month', 'year'],
     *   { input: { year: Number(req.query.year), month: Number(req.query.month) } },
     *   {
     *     records: {
     *       fields: ['id', 'date'],
     *       with: {
     *         usages: {
     *           fields: ['paidSec', 'amount', 'ledgerType'],
     *           with: {
     *             user: {
     *               fields: ['id'], with: { profile: { fields: ['firstName'] } }
     *             },
     *             room: { fields: ['name'] }
     *           }
     *         },
     *         freeCredits: { fields: ['paidSec', 'amount', 'ledgerType']},
     *         topups: { fields: ['paidSec', 'amount', 'ledgerType']},
     *       }
     *     }
     *   }
     * )
     * ```
     *
     * @param fields Array of [[Billing]] key names. Returns specified fields as result.
     * @param args
     * @param option
     */
    BillingClient.prototype.get = function (fields, args, option) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var result, data;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.client.query({
                            viewer: Viewer_1.buildViewerQuery(['id'], {
                                billing: { fields: fields, args: args, with: option }
                            })
                        })];
                    case 1:
                        result = _a.sent();
                        data = result.data.viewer.billing;
                        return [2 /*return*/, { errors: result.errors, data: data }];
                }
            });
        });
    };
    return BillingClient;
}());
exports.BillingClient = BillingClient;
//# sourceMappingURL=Billing.js.map