"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var Invitations_1 = require("../models/Invitations");
/** Client to call mutation for invitations */
var InvitatationsClient = /** @class */ (function () {
    /** @ignore */
    function InvitatationsClient(client) {
        this.client = client;
    }
    /**
     * Send an invitatoin.
     *
     * ```typescript
     * client.invitatoins.send(['id'], {
     *   data: {
     *     contactFullName: 'joe',
     *     contactType: ContactType.Email,
     *     contactInfo: 'example@gmail.com',
     *     organizationMemberRoleId: 'xxxxxxxxxxxxxxxxxx',
     *     roomId: 'xxxxxxxxxxxxxxxxxx',
     *     locale: Enum.Locale.En
     *   }
     * }).then(v => {
     *   console.log(v)
     * })
     * ```
     *
     * If you don't want to send a notificatoin message from classdo, you can use `withoutNotificattion` flag.
     *
     * ```typescript
     *  client.invitatoins.send(['id'], {
     *   data: {
     *     contactFullName: 'joe',
     *     contactType: ContactType.Email,
     *     contactInfo: 'example@gmail.com',
     *     organizationMemberRoleId: 'xxxxxxxxxxxxxxxxxx',
     *     roomId: 'xxxxxxxxxxxxxxxxxx',
     *     locale: Enum.Locale.En,
     *     withoutNotification: true
     *   }
     * }).then(v => {
     *   console.log(v)
     * })
     * ```
     *
     * @param fields Array of [[Invitation]] key names. Returns specified fields as result.
     * @param args
     * @param option
     */
    InvitatationsClient.prototype.send = function (fields, args, option) {
        var _a;
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var result;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0: return [4 /*yield*/, this.client.mutate(Invitations_1.buildSendInvitationMutation(fields, args, option))];
                    case 1:
                        result = _b.sent();
                        return [2 /*return*/, { errors: result.errors, data: ((_a = result.data) === null || _a === void 0 ? void 0 : _a.sendInvitation) || null }];
                }
            });
        });
    };
    return InvitatationsClient;
}());
exports.InvitatationsClient = InvitatationsClient;
//# sourceMappingURL=Invitations.js.map