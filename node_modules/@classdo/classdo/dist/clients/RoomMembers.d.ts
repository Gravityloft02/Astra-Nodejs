import { ClassDoAPIClient, Result } from '.';
import { RoomMemberKeys, RoomMembersOption, RoomMemberResult, RoomMembersResult } from '../models/RoomMembers';
import { UserKeys } from '../models/Users';
import { UserProfileKeys } from '../models/UserProfiles';
import { MutationAddRoomMembersArgs, MutationDeleteRoomMemberArgs, RoomMembersArgs } from '../generated/graphql';
import { EmailKeys } from '../models/Emails';
/** Client to call RoomMembers schema */
export declare class RoomMembersClient {
    private client;
    /** @ignore */
    constructor(client: ClassDoAPIClient);
    /**
     * Get a room member.
     *
     * ```typescript
     * client.roomMembers.get(['id'], 'xxxxxxxxxxxx').then(v => {
     *   console.log(v)
     * })
     * ```
     *
     * @param fields Array of [[RoomMember]] key names. Returns specified fields as result.
     * @param id
     * @param option
     */
    get<RM extends RoomMemberKeys, U extends UserKeys | null, U_UP extends UserProfileKeys | null, U_UP_E extends EmailKeys | null>(fields: RM[], id: string, option?: RoomMembersOption<U, U_UP, U_UP_E>): Promise<Result<RoomMembersResult<RM, U, U_UP, U_UP_E>>>;
    /**
     * Get list of room members.
     *
     * ```typescript
     * client.roomMembers.list(['id'], 'xxxxxxxxxxxx').then(v => {
     *   console.log(v)
     * })
     * ```
     *
     * @param fields Array of [[RoomMember]] key names. Returns specified fields as result.
     * @param roomId Room id.
     * @param args
     * @param option
     */
    list<RM extends RoomMemberKeys, U extends UserKeys | null, U_UP extends UserProfileKeys | null, U_UP_E extends EmailKeys | null>(fields: RM[], roomId: string, args?: RoomMembersArgs, option?: RoomMembersOption<U, U_UP, U_UP_E>): Promise<Result<RoomMembersResult<RM, U, U_UP, U_UP_E>>>;
    /**
     * Add new room member into the room.
     *
     * ```typescript
     * client.roomMembers.create(['id'], { data: { roomId: 'xxxxxxxxxxxx', userIds: ['xxxxxxxxxxxx'] }}).then(v => {
     *   console.log(result)
     * })
     * ```
     *
     * @param fields Array of [[RoomMember]] key names. Returns specified fields as result.
     * @param args
     * @param option
     */
    create<RM extends RoomMemberKeys, U extends UserKeys | null, U_UP extends UserProfileKeys | null, U_UP_E extends EmailKeys | null>(fields: RM[], args: MutationAddRoomMembersArgs, option?: RoomMembersOption<U, U_UP, U_UP_E>): Promise<Result<RoomMemberResult<RM, U, U_UP, U_UP_E>[]>>;
    /**
     * Remove a room member.
     *
     * ```typescript
     * client.roomMembers.delete(['id'], { id: 'xxxxxxxxxxxx' }).then(v => {
     *   console.log(v)
     * })
     * ```
     *
     * @param fields Array of [[RoomMember]] key names. Returns specified fields as result.
     * @param args
     */
    delete<RM extends RoomMemberKeys>(fields: RM[], args: MutationDeleteRoomMemberArgs): Promise<Result<RoomMemberResult<RM>>>;
}
