"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var RoomMembers_1 = require("../models/RoomMembers");
var Viewer_1 = require("../models/Viewer");
/** Client to call RoomMembers schema */
var RoomMembersClient = /** @class */ (function () {
    /** @ignore */
    function RoomMembersClient(client) {
        this.client = client;
    }
    /**
     * Get a room member.
     *
     * ```typescript
     * client.roomMembers.get(['id'], 'xxxxxxxxxxxx').then(v => {
     *   console.log(v)
     * })
     * ```
     *
     * @param fields Array of [[RoomMember]] key names. Returns specified fields as result.
     * @param id
     * @param option
     */
    RoomMembersClient.prototype.get = function (fields, id, option) {
        var _a, _b, _c, _d, _e;
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var result, data;
            return tslib_1.__generator(this, function (_f) {
                switch (_f.label) {
                    case 0: return [4 /*yield*/, this.client.query({
                            viewer: Viewer_1.buildViewerQuery(['id'], {
                                rooms: {
                                    fields: ['id'],
                                    args: { input: { where: { members_some: { id: id } } } },
                                    with: {
                                        members: {
                                            fields: fields,
                                            args: { input: { where: { id: id } } },
                                            with: option
                                        }
                                    }
                                }
                            })
                        })];
                    case 1:
                        result = _f.sent();
                        data = ((_d = (_c = (_b = (_a = result.data.viewer.rooms) === null || _a === void 0 ? void 0 : _a.edges[0]) === null || _b === void 0 ? void 0 : _b.node) === null || _c === void 0 ? void 0 : _c.members.edges[0]) === null || _d === void 0 ? void 0 : _d.node) || null;
                        if (!data) {
                            throw new Error("not found room member: " + id);
                        }
                        return [2 /*return*/, {
                                errors: result.errors,
                                data: (_e = result.data.viewer.rooms.edges[0].node.members.edges[0]) === null || _e === void 0 ? void 0 : _e.node
                            }];
                }
            });
        });
    };
    /**
     * Get list of room members.
     *
     * ```typescript
     * client.roomMembers.list(['id'], 'xxxxxxxxxxxx').then(v => {
     *   console.log(v)
     * })
     * ```
     *
     * @param fields Array of [[RoomMember]] key names. Returns specified fields as result.
     * @param roomId Room id.
     * @param args
     * @param option
     */
    RoomMembersClient.prototype.list = function (fields, roomId, args, option) {
        var _a, _b;
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var result;
            return tslib_1.__generator(this, function (_c) {
                switch (_c.label) {
                    case 0: return [4 /*yield*/, this.client.query({
                            viewer: Viewer_1.buildViewerQuery(['id'], {
                                rooms: {
                                    fields: ['id'],
                                    args: { input: { where: { id: roomId } } },
                                    with: {
                                        members: {
                                            fields: fields,
                                            args: args,
                                            with: option
                                        }
                                    }
                                }
                            })
                        })];
                    case 1:
                        result = _c.sent();
                        if (!((_b = (_a = result.data.viewer.rooms) === null || _a === void 0 ? void 0 : _a.edges[0]) === null || _b === void 0 ? void 0 : _b.node)) {
                            throw new Error("not found room: " + roomId);
                        }
                        return [2 /*return*/, {
                                errors: result.errors,
                                data: result.data.viewer.rooms.edges[0].node.members
                            }];
                }
            });
        });
    };
    /**
     * Add new room member into the room.
     *
     * ```typescript
     * client.roomMembers.create(['id'], { data: { roomId: 'xxxxxxxxxxxx', userIds: ['xxxxxxxxxxxx'] }}).then(v => {
     *   console.log(result)
     * })
     * ```
     *
     * @param fields Array of [[RoomMember]] key names. Returns specified fields as result.
     * @param args
     * @param option
     */
    RoomMembersClient.prototype.create = function (fields, args, option) {
        var _a;
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var result;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0: return [4 /*yield*/, this.client.mutate(RoomMembers_1.buildAddRoomMembersMutation(fields, args, option))];
                    case 1:
                        result = _b.sent();
                        return [2 /*return*/, {
                                errors: result.errors,
                                data: ((_a = result.data) === null || _a === void 0 ? void 0 : _a.addRoomMembers) || null
                            }];
                }
            });
        });
    };
    /**
     * Remove a room member.
     *
     * ```typescript
     * client.roomMembers.delete(['id'], { id: 'xxxxxxxxxxxx' }).then(v => {
     *   console.log(v)
     * })
     * ```
     *
     * @param fields Array of [[RoomMember]] key names. Returns specified fields as result.
     * @param args
     */
    RoomMembersClient.prototype.delete = function (fields, args) {
        var _a;
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var result;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0: return [4 /*yield*/, this.client.mutate(RoomMembers_1.buildDeleteRoomMemberMutation(fields, args))];
                    case 1:
                        result = _b.sent();
                        return [2 /*return*/, {
                                errors: result.errors,
                                data: ((_a = result.data) === null || _a === void 0 ? void 0 : _a.deleteRoomMember) || null
                            }];
                }
            });
        });
    };
    return RoomMembersClient;
}());
exports.RoomMembersClient = RoomMembersClient;
//# sourceMappingURL=RoomMembers.js.map