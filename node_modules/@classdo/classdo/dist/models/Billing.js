"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var typed_graphqlify_1 = require("typed-graphqlify");
var Utils_1 = require("../Utils");
var Users_1 = require("./Users");
var Rooms_1 = require("./Rooms");
exports.UsageLedger = {
    id: typed_graphqlify_1.types.string,
    ledgerType: typed_graphqlify_1.types.string,
    paidSec: typed_graphqlify_1.types.number,
    timestamp: typed_graphqlify_1.types.string,
    amount: typed_graphqlify_1.types.number
};
exports.BillingRecord = {
    id: typed_graphqlify_1.types.string,
    date: typed_graphqlify_1.types.string
};
exports.Billing = {
    id: typed_graphqlify_1.types.string,
    year: typed_graphqlify_1.types.number,
    month: typed_graphqlify_1.types.number
};
/**
 * @ignore
 */
function resolveUsageLedgerOption(option) {
    var user = option.user
        ? { user: Users_1.buildUserQuery(option.user.fields, option.user.with) }
        : {};
    var room = option.room
        ? { room: Rooms_1.buildRoomQuery(option.room.fields) }
        : {};
    return tslib_1.__assign(tslib_1.__assign({}, user), room);
}
/**
 * @ignore
 */
function buildUsageLedgerQuery(fields, option) {
    var pickedField = Utils_1.pick(exports.UsageLedger, fields);
    var resolvedOption = option ? resolveUsageLedgerOption(option) : {};
    return tslib_1.__assign(tslib_1.__assign({}, pickedField), resolvedOption);
}
/**
 *
 * @ignore
 */
function resolveBillingRecordOption(option) {
    var usages = option.usages
        ? { usages: buildUsageLedgerQuery(option.usages.fields, option.usages.with) }
        : {};
    var freeCredits = option.freeCredits
        ? { freeCredits: buildUsageLedgerQuery(option.freeCredits.fields) }
        : {};
    var topups = option.topups
        ? { topups: buildUsageLedgerQuery(option.topups.fields) }
        : {};
    return tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, usages), freeCredits), topups);
}
/**
 * @ignore
 */
function buildBillingRecordQuery(fields, option) {
    var pickedField = Utils_1.pick(exports.BillingRecord, fields);
    var resolvedOption = option ? resolveBillingRecordOption(option) : {};
    return tslib_1.__assign(tslib_1.__assign({}, pickedField), resolvedOption);
}
/**
 * @ignore
 */
function resolveBillingOption(option) {
    var records = option.records
        ? { records: buildBillingRecordQuery(option.records.fields, option.records.with) }
        : {};
    return tslib_1.__assign({}, records);
}
function buildBillingQuery(fields, args, option) {
    var pickedField = Utils_1.pick(exports.Billing, fields);
    var resolvedOption = option ? resolveBillingOption(option) : {};
    return typed_graphqlify_1.params(Utils_1.preprocessArgs(args), tslib_1.__assign(tslib_1.__assign({}, pickedField), resolvedOption));
}
exports.buildBillingQuery = buildBillingQuery;
//# sourceMappingURL=Billing.js.map