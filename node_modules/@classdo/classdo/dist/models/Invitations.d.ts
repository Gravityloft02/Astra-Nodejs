import { RoomKeys, RoomOption, RoomResult } from './Rooms';
import { OrganizationKeys, OrganizationType } from './Organizations';
import { ContactType, InvitationStatus, MutationSendInvitationArgs } from '../generated/graphql';
import { RoomMemberKeys } from './RoomMembers';
import { UserKeys } from './Users';
import { UserProfileKeys } from './UserProfiles';
import { EmailKeys } from './Emails';
export declare const Invitation: {
    id: string;
    contactType: "Email" | ContactType | "PhoneNumber";
    contactInfo: string;
    contactFullName: string;
    status: InvitationStatus | "Pending" | "Accepted" | "Cancelled";
};
export declare type InvitationType = typeof Invitation;
export declare type InvitationKeys = keyof InvitationType;
export declare type InvitationResult<I extends InvitationKeys | null, R extends RoomKeys | null, R_O extends OrganizationKeys | null, R_RM extends RoomMemberKeys | null, R_RM_U extends UserKeys | null, R_RM_U_UP extends UserProfileKeys | null, R_RM_U_UP_E extends EmailKeys | null, O extends OrganizationKeys | null> = ([I] extends [InvitationKeys] ? Pick<InvitationType, I> : {}) & ([R] extends [RoomKeys] ? {
    room: RoomResult<R, R_O, R_RM, R_RM_U, R_RM_U_UP, R_RM_U_UP_E>;
} : {}) & ([O] extends [OrganizationKeys] ? {
    profile: Pick<OrganizationType, O>;
} : {});
export declare type InvitationOption<R, R_O, RM, RM_U, RM_U_UP, R_RM_U_UP_E, O> = {
    room?: {
        fields: R[];
        with: RoomOption<R_O, RM, RM_U, RM_U_UP, R_RM_U_UP_E>;
    };
    organization?: {
        fields: O[];
    };
};
/**
 * @ignore
 */
export declare function buildInvitationQuery<I extends InvitationKeys, R extends RoomKeys | null, R_O extends OrganizationKeys | null, R_RM extends RoomMemberKeys | null, R_RM_U extends UserKeys | null, R_RM_U_UP extends UserProfileKeys | null, R_RM_U_UP_E extends EmailKeys | null, O extends OrganizationKeys | null>(fields: I[], option?: InvitationOption<R, R_O, R_RM, R_RM_U, R_RM_U_UP, R_RM_U_UP_E, O>): InvitationResult<I, R, R_O, R_RM, R_RM_U, R_RM_U_UP, R_RM_U_UP_E, O>;
/**
 * @ignore
 */
export declare function buildSendInvitationMutation<I extends InvitationKeys, R extends RoomKeys | null, R_O extends OrganizationKeys | null, R_RM extends RoomMemberKeys | null, R_RM_U extends UserKeys | null, R_RM_U_UP extends UserProfileKeys | null, R_RM_U_UP_E extends EmailKeys | null, O extends OrganizationKeys | null>(fields: I[], args: MutationSendInvitationArgs, option?: InvitationOption<R, R_O, R_RM, R_RM_U, R_RM_U_UP, R_RM_U_UP_E, O>): {
    sendInvitation: InvitationResult<I, R, R_O, R_RM, R_RM_U, R_RM_U_UP, R_RM_U_UP_E, O>;
};
