"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var typed_graphqlify_1 = require("typed-graphqlify");
var Rooms_1 = require("./Rooms");
var Organizations_1 = require("./Organizations");
var Utils_1 = require("../Utils");
var graphql_1 = require("../generated/graphql");
exports.Invitation = {
    id: typed_graphqlify_1.types.string,
    contactType: typed_graphqlify_1.types.oneOf(graphql_1.ContactType),
    contactInfo: typed_graphqlify_1.types.string,
    contactFullName: typed_graphqlify_1.types.string,
    status: typed_graphqlify_1.types.oneOf(graphql_1.InvitationStatus)
};
function resolveOption(option) {
    var org = option.organization ?
        { organization: Organizations_1.buildOrganizationQuery(option.organization.fields) } : {};
    var room = option.room ?
        { room: Rooms_1.buildRoomQuery(option.room.fields, option.room.with) } : {};
    return tslib_1.__assign(tslib_1.__assign({}, org), room);
}
/**
 * @ignore
 */
function buildInvitationQuery(fields, option) {
    var pickedField = Utils_1.pick(exports.Invitation, fields);
    var resolvedOption = option ? resolveOption(option) : {};
    return tslib_1.__assign(tslib_1.__assign({}, pickedField), resolvedOption);
}
exports.buildInvitationQuery = buildInvitationQuery;
/**
 * @ignore
 */
function buildSendInvitationMutation(fields, args, option) {
    var pickedFields = Utils_1.pick(exports.Invitation, fields);
    var resolvedOption = option ? resolveOption(option) : {};
    return {
        sendInvitation: typed_graphqlify_1.params(Utils_1.preprocessArgs(args), tslib_1.__assign(tslib_1.__assign({}, pickedFields), resolvedOption))
    };
}
exports.buildSendInvitationMutation = buildSendInvitationMutation;
//# sourceMappingURL=Invitations.js.map