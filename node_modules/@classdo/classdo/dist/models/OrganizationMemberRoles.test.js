"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var OrganizationMemberRoles_1 = require("./OrganizationMemberRoles");
var TestUtils_1 = require("../TestUtils");
var typed_graphqlify_1 = require("typed-graphqlify");
describe('buildOrganizationMemberRoleQuery', function () {
    it('should build a query', function () {
        var result = OrganizationMemberRoles_1.buildOrganizationMemberRoleQuery(['id', 'name']);
        TestUtils_1.compareGraphqlQuery(typed_graphqlify_1.query(result), "\n      query {\n        id\n        name\n      }\n    ");
    });
});
describe('buildOrganizationMemberRolesQuery', function () {
    it('should build a query', function () {
        var result = OrganizationMemberRoles_1.buildOrganizationMemberRolesQuery(['id', 'name']);
        TestUtils_1.compareGraphqlQuery(typed_graphqlify_1.query(result), "\n      query {\n        totalCount\n        pageInfo {\n          hasNextPage\n          hasPreviousPage\n          startCursor\n          endCursor\n        }\n        edges {\n          node {\n            id\n            name\n          }\n          cursor\n        }\n      }\n    ");
    });
    it('should build a query with args', function () {
        var result = OrganizationMemberRoles_1.buildOrganizationMemberRolesQuery(['id', 'name'], { input: { where: { name: 'Admin' } } });
        TestUtils_1.compareGraphqlQuery(typed_graphqlify_1.query(result), "\n      query(input: { where: { name: \"Admin\" } }) {\n        totalCount\n        pageInfo {\n          hasNextPage\n          hasPreviousPage\n          startCursor\n          endCursor\n        }\n        edges {\n          node {\n            id\n            name\n          }\n          cursor\n        }\n      }\n    ");
    });
});
//# sourceMappingURL=OrganizationMemberRoles.test.js.map