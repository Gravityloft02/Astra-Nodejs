"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var typed_graphqlify_1 = require("typed-graphqlify");
var Utils_1 = require("../Utils");
var Users_1 = require("./Users");
exports.RoomMember = {
    id: typed_graphqlify_1.types.string
};
/**
 * @ignore
 */
var buildRoomMemberEdge = function (roomMember) { return ({
    node: roomMember,
    cursor: typed_graphqlify_1.types.string
}); };
/**
 * @ignore
 */
var buildRoomMembers = function (args, roomMember) {
    var roomMembers = {
        totalCount: typed_graphqlify_1.types.number,
        pageInfo: {
            hasNextPage: typed_graphqlify_1.types.boolean,
            hasPreviousPage: typed_graphqlify_1.types.boolean,
            startCursor: typed_graphqlify_1.types.optional.string,
            endCursor: typed_graphqlify_1.types.optional.string
        },
        edges: [buildRoomMemberEdge(roomMember)]
    };
    return args ? typed_graphqlify_1.params(Utils_1.preprocessArgs(args), roomMembers) : roomMembers;
};
/**
 * @ignore
 */
function resolveOption(option) {
    var user = option.user ? { user: Users_1.buildUserQuery(option.user.fields, option.user.with || {}) } : {};
    return tslib_1.__assign({}, user);
}
/**
 * @ignore
 */
function buildRoomMembersQuery(fields, args, option) {
    var pickedField = Utils_1.pick(exports.RoomMember, fields);
    if (option && option.user) {
        pickedField['user'] = Users_1.buildUserQuery(option.user.fields, option.user.with || {});
    }
    return buildRoomMembers(args, pickedField);
}
exports.buildRoomMembersQuery = buildRoomMembersQuery;
/**
 * @ignore
 */
function buildAddRoomMembersMutation(fields, args, option) {
    var pickedFields = Utils_1.pick(exports.RoomMember, fields);
    var resolvedOption = option ? resolveOption(option) : {};
    return {
        addRoomMembers: typed_graphqlify_1.params(Utils_1.preprocessArgs(args), tslib_1.__assign(tslib_1.__assign({}, pickedFields), resolvedOption))
    };
}
exports.buildAddRoomMembersMutation = buildAddRoomMembersMutation;
/**
 * @ignore
 */
function buildDeleteRoomMemberMutation(fields, args) {
    var pickedFields = Utils_1.pick(exports.RoomMember, fields);
    return {
        deleteRoomMember: typed_graphqlify_1.params(Utils_1.preprocessArgs(args), tslib_1.__assign({}, pickedFields))
    };
}
exports.buildDeleteRoomMemberMutation = buildDeleteRoomMemberMutation;
//# sourceMappingURL=RoomMembers.js.map