"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var RoomMembers_1 = require("./RoomMembers");
var TestUtils_1 = require("../TestUtils");
var typed_graphqlify_1 = require("typed-graphqlify");
describe('buildRoomMembersQuery', function () {
    it('should build a query', function () {
        var result = RoomMembers_1.buildRoomMembersQuery(['id']);
        TestUtils_1.compareGraphqlQuery(typed_graphqlify_1.query(result), "\n      query {\n        totalCount\n        pageInfo {\n          hasNextPage\n          hasPreviousPage\n          startCursor\n          endCursor\n        }\n        edges {\n          node {\n            id\n          }\n          cursor\n        }\n      }\n    ");
    });
    it('should build a query with args', function () {
        var result = RoomMembers_1.buildRoomMembersQuery(['id'], {
            input: { where: { user: { profile: { firstName: 'testUser' } } } }
        });
        TestUtils_1.compareGraphqlQuery(typed_graphqlify_1.query(result), "\n      query(input: { where: { user: { profile: { firstName: \"testUser\" } } } }) {\n        totalCount\n        pageInfo {\n          hasNextPage\n          hasPreviousPage\n          startCursor\n          endCursor\n        }\n        edges {\n          node {\n            id\n          }\n          cursor\n        }\n      }\n    ");
    });
});
describe('buildAddRoomMembersMutation', function () {
    it('should build a query', function () {
        var result = RoomMembers_1.buildAddRoomMembersMutation(['id'], {
            data: { roomId: 'roomId', userIds: ['testUserId'] }
        });
        TestUtils_1.compareGraphqlQuery(typed_graphqlify_1.mutation(result), "\n      mutation {\n        addRoomMembers(data: { roomId: \"roomId\", userIds: [\"testUserId\"] }) {\n          id\n        }\n      }\n    ");
    });
});
describe('buildDeleteRoomMemberQuery', function () {
    it('should build a query', function () {
        var result = RoomMembers_1.buildDeleteRoomMemberMutation(['id'], { id: 'roomMemberId' });
        TestUtils_1.compareGraphqlQuery(typed_graphqlify_1.mutation(result), "\n      mutation {\n        deleteRoomMember(id: \"roomMemberId\") {\n          id\n        }\n      }\n    ");
    });
});
//# sourceMappingURL=RoomMembers.test.js.map