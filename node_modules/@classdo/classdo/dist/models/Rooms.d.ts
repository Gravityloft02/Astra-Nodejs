import { ViewerRoomsArgs, MutationCreateRoomArgs, MutationDeleteRoomArgs } from '../generated/graphql';
import { OrganizationType, OrganizationKeys } from './Organizations';
import { RoomMemberKeys, RoomMembersResult, RoomMembersOption } from './RoomMembers';
import { Connection } from './Connection';
import { RoomMembersArgs } from '../generated/graphql';
import { UserKeys } from './Users';
import { UserProfileKeys } from './UserProfiles';
import { EmailKeys } from './Emails';
export declare const Room: {
    id: string;
    name: string;
    description: string;
};
export declare type RoomType = typeof Room;
export declare type RoomKeys = keyof RoomType;
export declare type RoomResult<R extends RoomKeys, O extends OrganizationKeys | null = null, RM extends RoomMemberKeys | null = null, RM_U extends UserKeys | null = null, RM_U_UP extends UserProfileKeys | null = null, RM_U_UP_E extends EmailKeys | null = null> = Pick<RoomType, R> & ([O] extends [OrganizationKeys] ? {
    organization: Pick<OrganizationType, O>;
} : {}) & ([RM] extends [RoomMemberKeys] ? {
    members: RoomMembersResult<RM, RM_U, RM_U_UP, RM_U_UP_E>;
} : {});
export declare type RoomsResult<R extends RoomKeys, O extends OrganizationKeys | null, RM extends RoomMemberKeys | null, RM_U extends UserKeys | null, RM_U_UP extends UserProfileKeys | null, RM_U_UP_E extends EmailKeys | null> = Connection<RoomResult<R, O, RM, RM_U, RM_U_UP, RM_U_UP_E>>;
export declare type RoomOption<O, RM, RM_U, RM_U_UP, RM_U_UP_E> = {
    organization?: {
        fields: O[];
    };
    members?: {
        args?: RoomMembersArgs;
        fields: RM[];
        with?: RoomMembersOption<RM_U, RM_U_UP, RM_U_UP_E>;
    };
};
/**
 * @ignore
 */
export declare function buildRoomQuery<R extends RoomKeys, O extends OrganizationKeys | null, RM extends RoomMemberKeys | null, RM_U extends UserKeys | null, RM_U_UP extends UserProfileKeys | null, RM_U_UP_E extends EmailKeys | null>(fields: R[], option?: RoomOption<O, RM, RM_U, RM_U_UP, RM_U_UP_E>): RoomResult<R, O, RM, RM_U, RM_U_UP>;
/**
 * @ignore
 */
export declare function buildRoomsQuery<R extends RoomKeys, O extends OrganizationKeys | null, RM extends RoomMemberKeys | null, RM_U extends UserKeys | null, RM_U_UP extends UserProfileKeys | null, RM_U_UP_E extends EmailKeys | null>(fields: R[], args?: ViewerRoomsArgs | undefined | null, option?: RoomOption<O, RM, RM_U, RM_U_UP, RM_U_UP_E>): RoomsResult<R, O, RM, RM_U, RM_U_UP, RM_U_UP_E>;
/**
 * @ignore
 */
export declare function buildCreateRoomMutation<R extends RoomKeys, O extends OrganizationKeys | null, RM extends RoomMemberKeys | null, RM_U extends UserKeys | null, RM_U_UP extends UserProfileKeys | null, RM_U_UP_E extends EmailKeys | null>(fields: R[], args: MutationCreateRoomArgs, option?: RoomOption<O, RM, RM_U, RM_U_UP, RM_U_UP_E>): {
    createRoom: RoomResult<R, O, RM, RM_U, RM_U_UP, RM_U_UP_E>;
};
/**
 * @ignore
 */
export declare function buildDeleteRoomMutation<R extends RoomKeys>(fields: R[], args: MutationDeleteRoomArgs): {
    deleteRoom: RoomResult<R>;
};
