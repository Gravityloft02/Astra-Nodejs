import { EmailKeys, EmailResult } from './Emails';
import { UserProfileEmailsArgs } from '../generated/graphql';
export declare const UserProfile: {
    id: string;
    firstName: string;
    lastName: string;
    phoneNumber: string;
};
export declare type UserProfileType = typeof UserProfile;
export declare type UserProfileKeys = keyof UserProfileType;
export declare type UserProfileResult<UP extends UserProfileKeys | null, E extends EmailKeys | null> = ([UP] extends [UserProfileKeys] ? Pick<UserProfileType, UP> : {}) & ([E] extends [EmailKeys] ? {
    emails: EmailResult<E>;
} : {});
export declare type UserProfileOption<E> = {
    emails?: {
        fields: E[];
        args?: UserProfileEmailsArgs;
    };
};
/**
 * @ignore
 */
export declare function buildUserProfileQuery<UP extends UserProfileKeys, E extends EmailKeys | null>(fields: UP[], option?: UserProfileOption<E>): UserProfileResult<UP, E>;
